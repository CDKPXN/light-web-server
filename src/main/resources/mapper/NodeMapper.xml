<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.company.project.dao.NodeMapper">
  <resultMap id="BaseResultMap" type="com.company.project.model.Node">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="nodename" jdbcType="VARCHAR" property="nodename" />
    <result column="fid" jdbcType="INTEGER" property="fid" />
    <result column="ctime" jdbcType="TIMESTAMP" property="ctime" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="is_del" jdbcType="TINYINT" property="isDel" />
    <result column="type" jdbcType="INTEGER" property="type" />
  </resultMap>
  
  <resultMap type="com.company.project.vo.NodeVo" id="nodeTree">
  	<id column="id" jdbcType="INTEGER" property="id" />
    <result column="nodename" jdbcType="VARCHAR" property="nodename" />
    <result column="fid" jdbcType="INTEGER" property="fid" />
    <result column="ctime" jdbcType="TIMESTAMP" property="ctime" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="is_del" jdbcType="TINYINT" property="isDel" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <collection column="id" property="children" ofType="nodeVo" select="getNodeChildren"></collection>
  </resultMap>
  
  <sql id="BaseSql">
    select id,nodename,type,fid,ctime,updatetime,is_del from node
  </sql>
  
  
  <select id="selectChildNodeids" resultType="Integer">
  	select id from node
  	<where>
  	  and fid = #{fid}
  	</where>
  </select>
  
  <delete id="deleteNodeByids">
    delete from node
    <where>
      and id in
      <foreach collection="ids" item="id" open="(" separator="," close=")">
        #{id}
      </foreach>
    </where> 
  </delete>
  
  <select id="getAllNodesList" resultMap="nodeTree">
    <include refid="BaseSql" />
    <where>
      and fid = -1
    </where>
  </select>
  
  <select id="getNodeChildren" resultMap="nodeTree">
  	<include refid="BaseSql" />
  	<where>
  	  and fid = #{id}
  	</where>
  </select>
  
  <select id="selectQuanGuoId" resultType="Integer">
    select id from node
    <where>
      and fid = -1
    </where>
  </select>
  
  <update id="updateById" parameterType="com.company.project.model.Node">
        update node set nodename = #{node.nodename},fid = #{node.fid},updatetime = #{node.updatetime} where id = #{node.id}
  </update>
</mapper>