<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.company.project.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.company.project.model.User">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="userpass" jdbcType="VARCHAR" property="userpass" />
    <result column="realname" jdbcType="VARCHAR" property="realname" />
    <result column="duty" jdbcType="VARCHAR" property="duty" />
    <result column="company" jdbcType="VARCHAR" property="company" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="comment" jdbcType="VARCHAR" property="comment" />
    <result column="is_del" jdbcType="TINYINT" property="isDel" />
    <result column="is_admin" jdbcType="TINYINT" property="isAdmin" />
    <result column="mesg_authority" jdbcType="INTEGER" property="mesgAuthority" />
    <result column="ctime" jdbcType="TIMESTAMP" property="ctime" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
  </resultMap>
  
  <select id="findByFilter" resultMap="BaseResultMap" parameterType="String">
  	select
  		id,username,userpass,realname,duty,company,phone,email,comment
	from
		user
	<where>
	  is_del = 0
	  <if test="filter != null and filter != ''">
	    and
	    	(username like concat('%',#{filter},'%')
	    or
	    	realname like concat('%',#{filter},'%')
	    or
	    	company like concat('%',#{filter},'%'))
	  </if>
	</where>
  </select>
  
  <select id="findByUserId" resultMap="BaseResultMap" parameterType="Integer">
         select 
             	id,realname,duty,company,phone,email,comment,mesg_authority
         from 
               user 
         where
               id = #{id}
  </select>
  
  <select id="findNode" resultType="Integer" parameterType="Integer">
  		select
  		       nodeid
  		from
  		       node_user
  		where
  		       userid = #{userId}
  </select>
  
  
  
</mapper>